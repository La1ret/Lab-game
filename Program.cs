public class Maps
{
    private static Dictionary<string, char[,]> mapCollection = new Dictionary<string, char[,]>
    {
        {"StartLocation", new char[,]
            {
                {'║',' ',' ','@','@','@',' ',' ',' ','╨',' ',' ','║',' ',' ',' ',},
                {'╨',' ',' ',' ','║',' ',' ',' ',' ',' ',' ',' ','╨',' ',' ',' ',},
                {' ',' ','♣',' ','╨',' ',' ',' ',' ','♣',' ',' ',' ',' ','♣',' ',},
                {' ',' ',' ',' ',' ','♣',' ','█','█',' ',' ',' ',' ',' ',' ',' ',},
                {'▒','▒','▒','▒','▒',' ',' ','█','█',' ','♣','▒','▒','▒','▒','▒',},
                {' ','@',' ',' ','▒','▒',' ',' ',' ',' ','▒','▒',' ',' ',' ','@',},
                {'@','@','@',' ',' ','▒','▒','▒','▒','▒','▒',' ','@',' ','@','@',},
                {' ','║',' ',' ','♣',' ',' ','▒','▒','♣',' ','@','@','@',' ','║',},
                {' ','╨',' ','♣',' ',' ',' ','▒','▒',' ',' ',' ','║',' ',' ','╨',},
                {' ',' ',' ',' ',' ',' ','♣','▒','▒',' ',' ','♣','╨',' ',' ',' ',},
            }
        },
        {"Tower", new char[,]
            {
                {'@','@',' ',' ','@','◢','▄','█','█','█','█','▄','◣','@','@','@',' ','♣',},
                {'║',' ',' ','@','@','@',' ','▓','▓','▓','▓','♣',' ',' ','║',' ',' ',' ',},
                {'╨',' ',' ',' ','║',' ',' ','▓','#','#','▓',' ',' ',' ','╨',' ',' ',' ',},
                {' ',' ','♣',' ','╨',' ',' ','▓','#','#','▓',' ',' ','♣',' ',' ',' ',' ',},
                {' ',' ',' ',' ',' ','♣',' ','▓','▓','▓','▓',' ',' ',' ',' ',' ','♣',' ',},
                {'▒','▒','▒','▒',' ',' ',' ','▓','▓','▓','▓',' ',' ',' ',' ',' ',' ',' ',},
                {' ','@',' ','▒','▒',' ',' ','▓','¶','⁋','▓',' ',' ',' ',' ',' ',' ','@',},
                {'@','@','@',' ','▒','▒',' ',' ','¶','⁋',' ',' ',' ','@',' ',' ','@','@',},
                {' ','║',' ',' ','♣','▒','▒','▒','▒','▒','♣',' ','@','@','@',' ',' ','║',},
                {' ','╨',' ','♣',' ',' ','▒','▒','▒','▒',' ',' ',' ','║',' ',' ',' ','╨',},
                {' ',' ',' ',' ',' ',' ','♣',' ',' ',' ',' ',' ','♣','╨',' ',' ',' ',' ',},
            }
        }
        //Добавить новые карты в том числе карту внутриностей башни.
    };

    public static char[,] GetMap(string mapName)
    {
        return mapCollection[mapName];
    }
}
public class Pictures
{
    private static Dictionary<string, string> PicCollection = new Dictionary<string, string>
    {
        {"Wisard", "             ▒▒░░░░░░░░░░░░░░░░    \r\n           ▒▒░░░░████████████░░░░  \r\n         ▒▒░░░░████████████████░░░░\r\n       ▒▒▒▒░░████████████████████░░\r\n       ▒▒▒▒░░████░░██████████░░██░░\r\n       ▒▒▒▒░░████████████████████░░\r\n       ▒▒▒▒░░░░████████████████░░░░\r\n       ▒▒▒▒░░░░░░████████████░░░░  \r\n       ▒▒▒▒▒▒░░░░░░░░████░░░░░░    \r\n       ▒▒▒▒▒▒▒▒░░░░░░████░░░░      \r\n       ▒▒▒▒    ▒▒░░░░░░░░░░        \r\n       ▒▒      ▒▒░░░░░░░░░░░░      \r\n       ▒▒    ▒▒░░░░░░▒▒▒▒░░░░░░    \r\n             ▒▒░░░░░░░░░░░░░░░░    \r\n             ▒▒░░░░░░▒▒▒▒░░░░░░    \r\n             ▒▒░░░░▒▒░░░░▒▒░░░░    \r\n             ▒▒░░░░░░░░░░░░░░░░    \r\n             ▒▒░░░░▒▒░░▒▒▒▒░░░░    \r\n           ▒▒░░░░░░▒▒░░░░▒▒░░░░    \r\n           ▒▒░░░░░░▒▒▒▒░░▒▒░░░░    \r\n         ▒▒░░░░░░░░░░░░░░░░░░░░    \r\n         ▒▒    ████      ████      \r\n               ████      ████      \r\n               ██        ██        \r\n               ██        ▓▓        \r\n               ▓▓    "
        },
        {"Kinnel", "                                    ██▒▒▒▒▒▒██████████████████▒▒▒▒▒▒██      \r\n                                  ██▒▒▒▒▒▒██▒▒██▒▒▒▒▒▒▒▒▒▒██▒▒██▒▒▒▒▒▒██    \r\n                                ██▒▒▒▒▒▒██▒▒██▒▒▒▒▒▒▒▒▒▒▒▒▒▒██▒▒██▒▒▒▒▒▒██  \r\n                                ██▒▒▒▒██▒▒██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██▒▒██▒▒▒▒██  \r\n                                ██▒▒████▒▒▒▒▒▒▒▒▓▓▓▓▒▒▒▒▒▒▓▓▓▓▒▒▒▒████▒▒██  \r\n                                ██▒▒██▒▒▒▒▒▒▒▒▓▓▓▓  ▓▓▓▓▒▒▓▓▓▓▓▓▒▒▒▒██▒▒██  \r\n                                  ████▒▒▒▒▓▓▓▓▓▓      ▓▓▓▓▓▓  ▓▓▓▓▓▓████    \r\n                                ██▒▒██▓▓▓▓▓▓▓▓          ▓▓      ▓▓▓▓██▒▒██  \r\n                              ██▒▒▒▒▒▒██▓▓▓▓  ██          ██      ██▒▒▒▒▒▒██\r\n                              ██▒▒▒▒▒▒██▓▓▓▓  ██          ██      ██▒▒▒▒▒▒██\r\n                              ██▒▒▒▒▒▒▒▒██    ▓▓          ▓▓    ██▒▒▒▒▒▒▒▒██\r\n                                ██▒▒▒▒▒▒▒▒██  ░░          ░░  ██▒▒▒▒▒▒▒▒██  \r\n                                  ██▒▒▒▒██  ████████  ████████  ██▒▒▒▒██    \r\n                                  ██▓▓▒▒██      ████▒▒████      ██▒▒▓▓██    \r\n                                  ██▓▓▓▓██    ████▒▒▓▓▒▒████    ██▓▓▓▓██    \r\n                                    ██▓▓▓▓██  ██  ▒▒▓▓▒▒  ██  ██▓▓▓▓██      \r\n                                      ██▓▓██  ████▓▓██▓▓████  ██▓▓██        \r\n                                    ██▓▓██      ██████████      ██▓▓██      \r\n                                      ██                          ██       "
        },
        {"Heall", "                                                     ██████  ██████    \r\n                                   ██              ██▒▒▒▒▒▒██▒▒▒▒▒▒██  \r\n                                   ██            ██▒▒▒▒▒▒▒▒▒▒▒▒  ▒▒▒▒██\r\n                                   ██           ██▒▒▒▒▒▒▒▒▒▒▒▒░░    ▒▒██\r\n                            ████████████████     ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██\r\n                                   ██              ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒██  \r\n                                   ██                ██▒▒▒▒▒▒▒▒▒▒██    \r\n                                   ██                  ██▒▒▒▒▒▒██      \r\n                                                         ██▒▒██        \r\n                                                           ██     "
        },
        {"YourDead","                                _.---,._,'\r\n                               / ' _.--.< \r\n                                 /       `' \r\n                               / __.---._____ \r\n                               |/'   ___, .-'` \r\n                                   / '   \\\\             .\r\n                                 / '      ``-          -|-\r\n                                |                       |\r\n                                |                   .-'~~~`-.\r\n                                |                 .'         `.\r\n                                |                 |   R I P   |\r\n                                |                 |           |\r\n                                |                 |           |\r\n                                |               \\\\|           |// \r\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
        }
    };
    public static void ShowPicture(string PictureName) { Console.WriteLine(PicCollection[PictureName]); }
}
internal class Programm
{
    public class Character()
    {
        string name;
        int health;
        int attackPower;
        string spell;
        int heallCount;
        bool isCompanionExist;

        public string Name { get => name; set => name = value; }
        public int Health { get => health; set => health = value; }
        public int AttackPower { get => attackPower; set => attackPower = value; }
        public string Spell { get => spell; set => spell = value; }
        public int HeallCount { get => heallCount; set => heallCount = value; }
        public bool IsCompanionExist { get => isCompanionExist; set => isCompanionExist = value; }

    }
    static string[,] SpellBooks =
    {
                { "Управление огнём", "Управление льдом", "Управление землёй", "Управление ветром", "Управление водой", "Управление растениями", "Управление электричеством" },
                { "Управление огнём", "Управление льдом", "Управление землёй", "Управление ветром", "Управление водой", "Управление растениями", "Управление электричеством" },
    };
    static bool exit = false;
    static string name = "Игрок";
    static char PlayerChar = 'X';
    public static int PlayerX = 7, PlayerY = 9;
    public static string GetSpellBook(int Rank)
    {
        Random rnd = new();
        string spell = SpellBooks[Rank - 1, rnd.Next(0, SpellBooks.GetLength(1))];
        return spell;
    }
    public static void ShowEliana()
    {
        Console.WriteLine(" ⠀⠀⠀⠀⠀⠀⠀⠀⢠⣼⣿⣷⣦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣷⣶⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⢀⣾⡿⠋⠉⠻⣿⣿⣿⣿⣿⣿⣿⣿⣶⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠿⠿⢿⡟⠛⢿⠛⠻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣻⣉⣉⣠⣤⣤⣾⣷⣴⣿⣿⣶⣿⣿⣿⣷⣶⣶⣶⣤⣤⣀⡀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠟⠛⠃\n" +
                            "⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⣿⣿⣿⣿⣿⣿⠿⣟⣿⣿⣿⣿⡟⠉⢁⡤⣿⣿⣿⠿⣿⡉⠉⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⣠⣴⣿⣿⣿⣿⣿⣿⡿⢟⢛⣵⣿⣿⣿⣿⢿⣿⠷⠀⢀⠰⠾⢿⣿⣿⡆⣿⡇⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⣰⣾⣿⣿⣿⡿⠿⢻⣉⣥⣽⣾⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠘⣇⠀⢸⡿⣿⣇⡿⠁⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠘⠛⠿⢭⣭⣶⠶⠶⣿⠟⢻⢹⡀⢻⡘⢿⡟⡇⠀⠀⠀⠀⢀⣀⡈⢀⣾⣧⡙⢿⠁⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⠀⣿⡀⢸⡎⣗⢧⡳⣄⠙⢿⣦⡀⠀⠘⠻⠽⢃⣾⣿⣿⡷⣎⣧⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⠀⠘⣧⢸⢁⣿⣦⣙⢮⣓⣦⡙⢿⣶⣤⣄⣠⣾⣿⣿⣼⡇⢹⡿⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⡿⠻⣿⣮⠿⣌⠳⣿⣦⡹⣯⢿⣿⡿⣯⡟⢸⠇⣼⡇⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⢀⡴⣿⢿⢿⠟⠣⡀⠘⣿⢳⡈⠳⡌⢿⣷⣼⣌⢿⣇⠞⢠⠏⣰⠻⣿⡄⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⢀⡴⣫⠞⣫⢯⡏⠀⠀⠇⠀⣿⠀⢷⡀⢿⣸⣿⣿⡿⣧⡝⠀⡏⢰⣿⣧⢻⣳⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⢀⡴⣫⠟⣡⡾⠉⣼⡀⠀⠀⠀⠀⣿⡆⢸⡇⢸⢯⣿⣿⣿⢹⢟⢾⣠⢸⡇⣿⠀⣿⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⣰⣏⣾⡵⣻⠟⢁⣾⣿⣿⣿⣿⣿⣿⣿⡇⢸⡇⢸⣾⡟⢹⣿⣞⢯⠢⣌⡛⠣⣇⠀⡟⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⢹⣍⣽⠞⢁⡴⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⢸⡇⢸⣿⡷⡾⣿⢿⣯⣳⣤⣉⡛⠶⢿⣇⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠘⣏⢳⠚⣹⣿⣿⡟⣿⣿⣿⣿⣿⣿⣿⡇⢸⡇⢸⣿⣧⢧⢿⣆⢻⣿⡟⢻⣿⠷⣶⣯⣷⡀⠀⠀⠀⠀⠀\n" +
                            "⠀⠘⢾⣷⣧⡏⠻⣷⣻⣿⣿⣿⣿⣿⣿⣿⡼⡇⠘⣧⢻⣧⡈⠻⣷⡶⣿⡏⣽⢿⣿⡌⢿⢧⡄⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠙⠻⣿⣤⣉⠻⠏⠉⠛⠿⣿⡿⢟⡻⣷⠀⢻⣧⠻⣯⣿⣿⣷⠉⣵⣇⣧⣿⣇⣼⣸⠟⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠈⠙⠪⣽⠻⣿⣿⣿⣶⣾⣿⣤⣿⣧⡈⠻⣷⡌⠻⠦⠴⠯⠭⢾⣟⣿⡶⠋⠁⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠛⠿⠭⢍⣉⣿⣿⣿⣹⡟⣦⢌⣲⣤⣀⣤⣤⣶⡿⠿⠟⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                            "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠓⠿⠿⡿⠃⠀⠉⠛⠻⠿⠟⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀");
    }
    public static void YouDead()
    {
        //Пока не придумала как реализовать, но здесь должна быть функция для предлагания начать новую игру в слечае смерти, но не только скриптовой в бою, но и просто.
    }
    public static void Movements()
    {
        Console.SetCursorPosition(PlayerX, PlayerY);
        Console.Write(PlayerChar);
        PlayerChar = PlayerChar == 'X' ? 'Y' : 'X';
    }

    public static int TowerLocation()
    {
        Console.CursorVisible = false;
        Console.SetCursorPosition(0, 15);
        Console.WriteLine("\nТы выходишь на опушку посреди которой стоит башенка, вокруг которой растут кусты. Тебя посещает мысль: может стоит осмотртреть кусты внимательнее?");
        char[,] map = Maps.GetMap("Tower");
        bool exit2 = exit;
        int heallCount = 0;
        while (!exit)
        {
            Console.SetCursorPosition(0, 0);
            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);

                }
                Console.WriteLine();
            }

            Movements();

            ConsoleKeyInfo k = Console.ReadKey(true);
            int newX = PlayerX, newY = PlayerY;
            switch (k.Key)
            {
                case ConsoleKey.RightArrow: { newX++; break; }
                case ConsoleKey.DownArrow: { newY++; break; }
                case ConsoleKey.LeftArrow: { newX--; break; }
                case ConsoleKey.UpArrow: { newY--; break; }
            }

            if (newX >= 0 && newX < map.GetLength(1) && newY >= 0 && newY < map.GetLength(0) && (map[newX, newY] == ' ' || map[newX, newY] == '▒'))
            {
                PlayerX = newX;
                PlayerY = newY;
            }
            else if (map[newY, newX] == '♣')
            {
                if (heallCount == 0) Console.Clear();
                Console.SetCursorPosition(0, 15);
                heallCount += 1;
                map[newY, newX] = '┴';
                Console.WriteLine($"Ты получил ягоду! У тебя уже {heallCount} ягод");
            }

            if (newY == 5 && newX == 0 && PlayerX != 0 && PlayerY != 5) { exit2 = true; Console.Clear(); PlayerX = 15; PlayerY = 4; StartLocation(); }//выход в стартовую локу
            else if (newY == 7 && (newX == 8 || newX == 9)) { exit2 = true; Console.Clear(); }//вход в башню
        }
        return heallCount;
    }
    public static string StartLocation()
    {
        Console.CursorVisible = false;
        bool exit1 = exit;
        char[,] map = Maps.GetMap("StartLocation");
        while (!exit1)
        {
            Console.SetCursorPosition(0, 0);
            for (int i = 0; i < map.GetLength(0); i++)
            {
                for (int j = 0; j < map.GetLength(1); j++)
                {
                    Console.Write(map[i, j]);

                }
                Console.WriteLine();
            }

            Movements();

            ConsoleKeyInfo k = Console.ReadKey(true);
            int newX = PlayerX, newY = PlayerY;
            switch (k.Key)
            {
                case ConsoleKey.RightArrow: { newX++; break; }
                case ConsoleKey.DownArrow: { newY++; break; }
                case ConsoleKey.LeftArrow: { newX--; break; }
                case ConsoleKey.UpArrow: { newY--; break; }
            }

            if (newX >= 0 && newX < map.GetLength(1) && newY >= 0 && newY < map.GetLength(0) &&//условие передвижения
                (map[newY, newX] == ' ' || map[newY, newX] == '▒'))
            {
                PlayerX = newX;
                PlayerY = newY;
            }

            if (newY == 4 && (newX == 7 || newX == 8))//подход к камню
            {
                Console.SetCursorPosition(0, 12);
                Console.WriteLine("Ты стоишь у развилки напротив камня, на котором написано: 'Здравствуй, юный искатель приключений! Как тебя называть?'\n");
                name = Console.ReadLine();
                Console.WriteLine("\nНадпись на камне меняется, теперь там написано: 'Воином стать хочешь - Налево иди. Магом стать хочешь - Направо иди.'");
                Console.ReadKey();
                Console.Clear();
            }
            else if (PlayerY == 4 && (PlayerX == 0 || PlayerX == 15))//выход из локи
            {
                if (PlayerX == 15) { exit1 = true; PlayerX = 0; PlayerY = 5; TowerLocation(); }
                else
                {
                    Console.SetCursorPosition(0, 12);
                    Console.WriteLine("Ты стоишь на краю обрыва, к сожаленю, дальше не пройти, но ты видишь на другом краю дорогу в практическую работу Харченко.");
                    Console.ReadKey();
                    Console.Clear();
                }
            }
        }
        return name;
    }
    public static void CleanConsole()
    {
        Console.ReadKey();
        Console.Clear();
    }

    public static void Main(string[] args)
    {
        string NewGame;
        do
        {
            int heallCount = 0;
            Console.Clear();
            Character Player = new Character();
            Player.Health = 100;
            Player.AttackPower = 5;
            Player.HeallCount = 0;

            StartLocation();
            Player.Name = name;
            Player.HeallCount += heallCount;

            Console.WriteLine("\nВойдя в башню, ты замечаешь стул за столом, на котором стоит миска, окошко, из которого видно поляну, шкаф с книгами и лестницу наверх. Всё это слегка запылено, а окошко давно не протерали\n" +
            "Ты сразу Подымешься или сначала Осмотришь башню?");
            string Answer2 = Console.ReadLine();
            if (Answer2 == "Осмотрю башню" || Answer2 == "осмотрю башню" || Answer2 == "осмотрю" || Answer2 == "Осмотрю" || Answer2 == "Осмотрюсь" || Answer2 == "осмотрюсь")
            {
                Console.WriteLine("\nОсмотрев стул, стол и содержиое миски, ты начинаешь скучающе пролистывать книги в шкафу. И тут ты натыкаешься на необычную книгу!");
                Player.Spell = GetSpellBook(1);
                Console.WriteLine($"\n{Player.Name} получает Книгу Заклинаний: Основы. {Player.Spell}. (редкость: обычная)!\nС интересом прочитав эту книгу, ты понимаешь что научился магии.\nНа всякий случай ты кладёшь её в свой рюкзак");
            }
            Console.WriteLine("\n\nТы подымаешься по лестнице и видишь незаправленную кровать, стол с раскиданными по нему вещами и зловещёю фигуру у стола. Видимо услышав тебя, фигура оборачиванется и...\n" +
            "Ты получаешь молнией в лицо!\n\n\n\n\n\n(Для продолжения нажмите любую клавишу)");
            Player.Health -= 5;

            CleanConsole();
            Console.WriteLine($"\n{Player.Name} вступает в бой с ??? !\n\nСРАЖЕНИЕ НАЧИНАЕТСЯ!\n");
            bool isGameOver = false;
            int damageGiven = Player.AttackPower;

            Character Kinnel = new Character();
            Kinnel.Health = 50;
            Kinnel.AttackPower = 5;
            Kinnel.Spell = "Управление электричеством";
            int damageTaken = Kinnel.AttackPower;

            bool IsEnemyStan = false;
            if (Player.Spell == "Управление растениями" || Player.Spell == "Управление землёй") IsEnemyStan = true;

            Console.ReadKey();

            while (isGameOver == false)
            {
                Console.Clear();
                if (Player.Health <= 0)
                {
                    if (Player.HeallCount > 0)
                    {
                        Pictures.ShowPicture("Heall");
                        while (Player.HeallCount > 0 && Player.Health <= 0)
                        {
                            Player.HeallCount -= 1;
                            Player.Health += 3;
                        }
                        Console.WriteLine($"\nВы съедаете ягоды и чувствуете прилив сил!\n{Player.Name} расходует Ягоды ({Player.HeallCount} шт.)\n{Player.Name} восстанавливает ", Player.HeallCount * 3, " едениц здоровья");
                        Console.ReadKey();
                    }
                    else
                    {
                        Pictures.ShowPicture("YourDead");
                        Console.WriteLine($"\n{Player.Name} погибает...\n\nВЫ УМЕРЛИ");
                        isGameOver = true;
                        break;
                    }
                }

                else if (Kinnel.Health <= 0)
                {
                    isGameOver = true;
                    Console.Clear();
                    Pictures.ShowPicture("Kinnel");
                    Console.WriteLine("\nТы собираешься нанести последний удар и тут слышишь:\n 'П-постойте! Не убивайте меня! Я думала что Вы - бандит, но теперь я вижу что нет! Прошу! Пощадите!'\n\n" +
                    "Что же ты сделаешь? Пощадишь или Добьёшь?");
                    string AnswerAboutCompanion = Console.ReadLine();
                    if (AnswerAboutCompanion == "Пощажу" || AnswerAboutCompanion == "пощажу")
                    {
                        Console.Clear();
                        Pictures.ShowPicture("Kinnel");
                        Console.WriteLine($"\nСпасибо Вам огромное! В знак благодарности я последую за Вами и буду Вам помогать во всём!\n" +
                            $"\nК {Player.Name} присоеденяется Компаньон ");
                        Player.IsCompanionExist = true;
                        Kinnel.Health = 70;
                    }
                    else if (AnswerAboutCompanion == "Добью" || AnswerAboutCompanion == "добью")
                    {
                        Console.WriteLine("\nТы добиваешь её и поскорее уходишь из башни, чтобы не нарваться на ещё какие-нибудь неприятности.");
                        Player.IsCompanionExist = false;
                    }
                    else
                    {
                        Console.WriteLine("\nНе поняв что ты делаешь и немного поколебавшись, девушка спустя некоторое время произносит:\n" +
                        "'У Вас очень доброе сердце: Вы не убили меня, хотя могли. Это значит, что теперь моя жизнь у Вас в руках. Я последую за Вами и буду выполнять все ваши указы!'\n" +
                        $"\nК {Player.Name} присоеденяется Компаньон ");
                        Player.IsCompanionExist = true;
                        Kinnel.Health = 70;
                    }
                }

                else
                {
                    Pictures.ShowPicture("Wisard");
                    damageTaken++;
                    if (Player.Spell == "Книга заклинаний: Управление электричеством" || Player.Spell == "Книга заклинаний: Управление огнём") damageGiven++;
                    if (Player.Spell == "Книга заклинаний: Управление ветром" || Player.Spell == "Книга заклинаний: Управление льдом" || Player.Spell == "Книга заклинаний: Управление водой") damageTaken--;

                    Kinnel.Health -= damageGiven;
                    if (Player.Spell != null) { Console.WriteLine($"\nТы атакуешь! Ты нанес {damageGiven} урона, используя магию, изученную по {Player.Spell}"); }
                    else { Console.WriteLine($"\nТы атакуешь! Ты нанес {damageGiven} урона"); }

                    if (!IsEnemyStan)
                    {
                        Player.Health -= damageTaken;
                        Console.WriteLine($"\nМаг атакует! Он нанес тебе {damageTaken} урона магией молний\n");
                    }
                    else { Console.WriteLine("\nВраг не может атаковать, из-за твоей магии!\nВраг парализован на 1 раунд."); IsEnemyStan = false; }
                    Console.ReadKey();
                }
            }
            Console.ReadKey();
            Console.Clear();

            if (Player.Health > 0)
            {
                if (Player.IsCompanionExist)
                {
                    Console.WriteLine("\nВы вместе выходите из башни и твоя новая спутница назыает тебе своё имя - Киннель.\n\n" +
                    "Выйдя на полянку перед башней, твоя спутница спарашивает направляешь ли ты в определённое место. Ты отрицательно качаешь головой, на что она предлагает тебе пойти к дому своей Наставницы" +
                    " по тропинке, спрятанной за кустами с ягодами. Ты соглашаешься, идти то тебе всё равно больше некуда. Пока вы идёте она рассказывает тебе свою историю:\n\n" +
                    "Оказывается, что Киннель выросла в небольшой деревушке и её родители - обычные крестьяне. Она с самого детства увлекалаась травничеством и варила в кадке разные зелья, как и большинство детей\n" +
                    " в округе. Киннель даже верила что она маг, ведь когда она просила своих домашних животных выздороветь - болезнь быстро отступала. Но однажды через деревню проходила загадочная женщина и\n" +
                    " осталась переночевать в доме старосты перед тем как продолжить путь. Дети со всей деревни сбежались посмотреть на неё ведь в деревне редко появлялись новые лица. А Книннель утащил туда друг,\n" +
                    " хотя она изначально не хотела идти, а остатся и собрать ещё чуть-чуть трав. Когда женщина вышла из дома, она уже хотела разогнать толпу, но заметила Киннель. Женщина сказала её что у неё\n" +
                    " и правда есть талант к магии восстановления и предложила Киннель стать её учиницей. Женщина оказалась ведьмой. Она договорилась с родителями Киннель и те согласились отпусьть дочь с условием \n" +
                    "что раз в год, та будет возвращаться домой и гостить там. Так и продолжалось несколько лет, пока они с Ведьмой путешествовали, попадая в разные приключения. Однако недавно Наставница\n" +
                    " Киннель сказала её пойти в эту башню и попрактиковаться магией здесь ближайщие несколько месяцев, а заодно изучить книги, а от забродших рахбойников отбиваться с  помощью единственного относительно боевого заклинания -\n" +
                    " молнии, которую Киннель обычно использовала для ускорения роста растений.\n\n 'Вот как-то так.-Заканчивает Киннель- А ещё моя Наставница говорила мне что если я проиграю в битве, то мне к ней лучше не приходить, хе-хе. Но куда мне идти если не к ней?'" +
                    "\n\nКак раз в этот момент вы подходите к хорошо выглядящему дому, даже не дому скорее,а резиденции\n\n\n\n\n\n(Для продолжения нажмите любую клавишу)");
                    Console.ReadKey();
                    Console.Clear();
                }
                else Console.WriteLine("\nВыйдя, ты замечашь ещё одну тропинку, кроме той по которой пришёл и решаешь пойти по ней и спустя некоторое время выходишь к хорошо выглядящему дому, даже скорее резиденции.");
                Console.WriteLine("Ты не успевашешь даже постучать когда из-за двери разносится голос: \n'Кто ты, воин? И зачем ты пытаешься войти в сей дом? Неужели ты-'");
                if (Player.IsCompanionExist)
                { Console.WriteLine("Ты вопросительно смотришь на Киннель.\n Она быстро объясняет: 'А, не обращай внимания, у наставницы всегда так. Даже когда она сама к дому подходит! а ещё-'"); }

                Console.WriteLine("Мистический голос пропадает, вместо него теперь слышутся шаги и тихая ругань, напоминающая 'Давно пора разобраться с этой глупостью и всё таки научить этого поганца" +
                    " тому, какие заклинания не следует накладывать на дом в отсутстыие хозяйки!'. Дверь распахивается и на пороге появляется красивая тёмноволосая женщина. Она произносит:");
                ShowEliana();
                Console.ReadKey();
                Console.Clear();

                if (Player.IsCompanionExist)
                    Console.WriteLine("'Ты- Подожди, Малявка? Что ты тут делаешь? Разве ты не должна как минимум до конца месяца Холодной Воды быть в башне?'\n\n" +
                        "-Наставница, понимаете, там сложилась такая ситуация...\n\n" +
                        "-И слушать не хочу. Ты нарушила указ. Лучше объясни кто это.- Ведьма тычет пальцем в твою сторону.\n\n" +
                        $"-Это {Player.Name}. Этот человек путешествовал и наткнулся на башню, а там мы и познакомились\n\n" +
                        "-Судя по вашему виду вы немного повзодрили. А судя по тому что ты здесь, ты проиграла. Раз так, то зачем ты пришла? Я кажется говорила тебе-\n\n" +
                        "-Но наставница! Вы же сами говорили, что если поподётся достойный противник и оставит в живых, то это уже хорошо, а если получится сделать из него союзника, то...\n" +
                        " Впрочем, вы и сами знаете что говорили-договаривает она слегка косясь на тебя.\n\n" +
                        "Ведьма бормочет себе под нос - Ой, я не думала что ты запомнишь тот разговор- а затем произносит уже громче\n А у тебя что, вышло? Чтож, раз так, то я прощаю тебя,\n" +
                        "но тогда я должна проверить твоего спутника, вдруг он не лучше тебя, а ты просто обленилась за время проведённое в башне?- из глубины дома разноситься какой-то звук\n" +
                        "-В общем идите в ближайший городок как-его-там\n\n" +
                        "-Адэнтауэр?\n\n" +
                        "-Да-да, найдите там Зиргала, главаря этих городских буянщиков, и скажите, что он так и не отдал плату за услугу от Элианы. А теперь быстро кыш!- звуки из-за спины Ведьмы повторяются но теперь громче.\n\n" +
                        "-А где же нам его искать?\n\n" +
                        "-Да где-нибудь в кабаке, он всё равно там появляется слишком часто для приличного человека! Вроде он звался то ли лунная гладь, то ли какая-то даль... А теперь кыш, малышня!\n\n" +
                        "Ведьма захлопывает перед вами дверь.\n\n" +
                        "-Ну что? Выбора нет, так ведь? придётся идти- произносит Киннель.\n\n" +
                        "-А она всегда такая?- спрашиваешь ты\n\n" +
                        "-Да нет, видимо у неё плохое настроение или что-то случилось. В любом случае это не так важно, идём!");
                else Console.WriteLine("Ты ещё кто? Я никого не ждала. \n\n Ты объясняешь ситуацию.\n\n -А, так значит Малявка сдохла?..И как я это объясню её родитеялм?..А в прочем не важно. Не она так ты.\n" +
                    "Раз ты её завалил, значит силён, теперь будешь моим учеником вместо неё.-из-за спины ведьмы разноситься какой-то звук.- Так! для начала метнись-ка в ближайщий город. Как его там?\n" +
                    " Аде-аде-...Адентауэр? Вроде так. И найди там Зиргала, главаря местных выпивал, но официально почему-то главу города. И скажи ему, что он не отплатил за услугу Эллиане.-Звук за спиной повторяется,\n" +
                    "но в этот раз громче.- Найдёшь его где-нибудь в кабаке в роде Лунной гавани. А теперь кыш!\n\nДверь перед вашим носом захлопывается.\n\nНу что же? Как будто у тебя есть выбор. Ты направляешься к городу.");

                Console.WriteLine("Уже ближе к вечеру ты выходишь из леса на тропинку, которая в конце приводит тебя к стенам города. Зайдя в город ты видишь высокие каменные и деревянные дома, деревянные фонарные столбы с" +
                    "висящими на них лампами и народ ходящий туда-сюда между ларьками с едой, аммуницией и всякой-всячиной. Ты пониаешь, что скорее всего в городе сейчас ярморка, а значит привезли много интересных товаров." +
                    " Ты Хочешь пройтись по ларькам или Сразу начнёшь искать таверну?");
                string Answer3 = Console.ReadLine();
                if (Answer3 == "хочу" || Answer3 == "Хочу" || Answer3 == "Хочу пройтись по ларькам" || Answer3 == "хочу пройтись по ларькам")
                {
                    if (Player.IsCompanionExist == true)
                    {
                        Console.WriteLine("Когда ты направляешься к ларькам, Киннель было хватает тебя за рукав, но тут же отдёргивает руку. Ты вопросительно смотришь на неё." +
                        "Девушка произносит: слушай, мне тоже интересно побывать на ярморке, всё таки я почти месяц пробыла в башне идовольно заскучала, но мне кажется сейчас это не лучшая идея. Таверна всё таки может закрытся...\n" +
                        "Ты всё ещё хочешь пойти на ярморку?\n\n (Да/Нет)");
                        string Answer4 = Console.ReadLine();
                        if (Answer4 == "Нет" || Answer4 == "НЕТ" || Answer4 == "нет")
                        {
                            Console.WriteLine("-Фух! Спасибо тебе большое, что прислушался, давай как можно скорее отыщем Зиргала и тогда может успеем на ярморку на обратном пути!");
                            break;
                        }
                    }
                    Console.WriteLine("Вы ходите по ярморке и осматриваеете каждый прилавок. Здесь есть практически всё. Особенно много товаров для путешественников, вероятно это потому что этот городок как ты\n" +
                    " понял/а по рассказам кинель находится между двумя крупными городами Брайтулом городом 3&43$#)& и Шадероном городом (?*4?56*! и изначально появился благодоря постоянным стоянком путешествинников\n" +
                    " уставших от долгого пути. На прилавках лежали и сухпайки и нойвые сопаги и наборы для разжигания костров. Некоторые люди выкрикивали свои предложения по совместному путешествию. Кто-то хотел\n" +
                    "проводить других путников за деньги в обмен на защиту, кто-то искал этого, некоторые же просто хотели составить каому-либо компанию или искали сових друзей, затерявшихся на базаре. По-внимательнее\n" +
                    "приглядевшись к ценам, ты понял/а что тебе тут вообще ничего не по корману и уже было собрался искать таверну, как понял, что на дворе уже глубокая ночь, наступление которой ты не заметил из-за шума\n" +
                    "и ярокости ярморки. Попытавшись зайти в ближайший кобак, ты понимаешь что он закрыт. Что ж похоже сегодня выполнить задание Ведьмы не получится...");
                    if (Player.IsCompanionExist == true)
                    {
                        Console.WriteLine("- Этого я и боялась... Ну что ж попытаемся найти хоть какую-то начлежку. Вроде у меня оставались пару монет с того момента как наставница посылала меня за покупакми...\n" +
                            "О! а вот и деньги! Но... Их наверно хватит только на одну комнату... Ты же не против переночевать в одной комнате? Просто если нет, то я даже не знаю, что делать...\n\n" +
                            "-Не беспокойся, Кин, меня всё устраивает.\n" +
                            "-Ой, как ты меня назвал? Кин? А что, звучит довольно мило, мне нравится! Ну что пойдём?\n\n" +
                            "Вы находите ночлежку которая соглашается пустить вас в свой номер, и у вас  бы даже хватило денег на второй, но из-за ярморки всё занято под частую. ");
                        Console.WriteLine(new string('-', 37));
                        Console.WriteLine("Проснувшись с утра вы сразу отправляетесь искать Зиргала.");
                    }
                    else
                    {
                        Console.WriteLine("Ты уже собрался искать ночлег на этот вечер, как понял, что у тебя с собой нет ни гроша. Что ж придётся спать на улице, благо температура вроде позволяет...");
                        Console.WriteLine(new string('-', 37));
                        Console.WriteLine("Проснувшись с утра ты пониаешь, что кажется на улице вё таки не настолько тепло, как ты думал... Ты просквозил себе спину, теперь она противно ноет.\n" +
                            " Последствия от этого пройдут не скоро... Но ты всё равно отправляешься искать Зиргала, ведь работа сама себя не выполнит.");
                    }
                }
            }
            Console.WriteLine("=======> To Be continued");
            Console.WriteLine("\n\n\nНачать новую игру? (ДА/НЕТ)");
            NewGame = Convert.ToString(Console.ReadLine());
        }
        while (NewGame == "ДА" || NewGame == "Да" || NewGame == "да");
    }
}